{"ast":null,"code":"import _objectSpread from\"/Users/victor/Documents/Sublime/claude_api_project/chat-pwa/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{Container,Box,TextField,Button,Paper,Typography,AppBar,Toolbar,IconButton,Drawer,List,ListItem,ListItemText,Dialog,DialogTitle,DialogContent,DialogActions,Select,MenuItem,FormControl,InputLabel}from'@mui/material';import{Settings,Send,Menu}from'@mui/icons-material';import ReactMarkdown from'react-markdown';import OpenAI from'openai';import Anthropic from'@anthropic-ai/sdk';import{openDB}from'idb';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DB_NAME='chat-pwa-db';const STORE_NAME='api-keys';const MODELS={'claude-haiku':{backend:'anthropic',modelId:'claude-3-haiku-20240307',label:'Claude Haiku',parameters:{temperature:0.7,maxTokens:4096}},'claude-sonnet':{backend:'anthropic',modelId:'claude-3-sonnet-20240307',label:'Claude Sonnet',parameters:{temperature:0.7,maxTokens:4096}},'gpt-4':{backend:'openai',modelId:'gpt-4-turbo-preview',label:'GPT-4 Turbo',parameters:{temperature:0.7,maxTokens:4096}},'gpt-3.5-turbo':{backend:'openai',modelId:'gpt-3.5-turbo',label:'GPT-3.5 Turbo',parameters:{temperature:0.7,maxTokens:4096}},'o1-mini':{backend:'openai',modelId:'o1-mini',label:'ChatGPT o1 Mini',parameters:{temperature:1,maxTokens:2048},parameterMap:{maxTokens:'max_completion_tokens'}}};async function initDB(){return openDB(DB_NAME,1,{upgrade(db){db.createObjectStore(STORE_NAME);}});}function App(){const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[isLoading,setIsLoading]=useState(false);const[drawerOpen,setDrawerOpen]=useState(false);const[settingsOpen,setSettingsOpen]=useState(false);const[currentModel,setCurrentModel]=useState('gpt-3.5-turbo');const[apiKeys,setApiKeys]=useState({openai:'',anthropic:''});const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{scrollToBottom();},[messages]);useEffect(()=>{// Load API keys from IndexedDB\nconst loadApiKeys=async()=>{const db=await initDB();const keys=await db.get(STORE_NAME,'api-keys');if(keys){setApiKeys(keys);}};loadApiKeys();},[]);const saveApiKeys=async newKeys=>{const db=await initDB();await db.put(STORE_NAME,newKeys,'api-keys');setApiKeys(newKeys);};const handleSend=async()=>{if(!input.trim())return;const model=MODELS[currentModel];const userMessage={role:'user',content:input};setMessages(prev=>[...prev,userMessage]);setInput('');setIsLoading(true);try{let response;if(model.backend==='openai'){const openai=new OpenAI({apiKey:apiKeys.openai});const apiParams={};// Map parameters according to model's requirements\nObject.entries(model.parameters).forEach(_ref=>{var _model$parameterMap;let[key,value]=_ref;const mappedKey=((_model$parameterMap=model.parameterMap)===null||_model$parameterMap===void 0?void 0:_model$parameterMap[key])||key;apiParams[mappedKey]=value;});const completion=await openai.chat.completions.create(_objectSpread({model:model.modelId,messages:[...messages,userMessage]},apiParams));response=completion.choices[0].message;}else if(model.backend==='anthropic'){const anthropic=new Anthropic({apiKey:apiKeys.anthropic});const completion=await anthropic.messages.create(_objectSpread({model:model.modelId,messages:[...messages,userMessage]},model.parameters));response={role:'assistant',content:completion.content[0].text};}setMessages(prev=>[...prev,response]);}catch(error){console.error('Error:',error);setMessages(prev=>[...prev,{role:'assistant',content:\"Error: \".concat(error.message)}]);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsx(AppBar,{position:\"fixed\",children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(IconButton,{edge:\"start\",color:\"inherit\",onClick:()=>setDrawerOpen(true),children:/*#__PURE__*/_jsx(Menu,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{flexGrow:1},children:\"AI Chat\"}),/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:()=>setSettingsOpen(true),children:/*#__PURE__*/_jsx(Settings,{})})]})}),/*#__PURE__*/_jsx(Drawer,{anchor:\"left\",open:drawerOpen,onClose:()=>setDrawerOpen(false),children:/*#__PURE__*/_jsx(List,{sx:{width:250},children:Object.entries(MODELS).map(_ref2=>{let[key,model]=_ref2;return/*#__PURE__*/_jsx(ListItem,{button:true,selected:currentModel===key,onClick:()=>{setCurrentModel(key);setDrawerOpen(false);},children:/*#__PURE__*/_jsx(ListItemText,{primary:model.label})},key);})})}),/*#__PURE__*/_jsxs(Dialog,{open:settingsOpen,onClose:()=>setSettingsOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"API Settings\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,margin:\"normal\",label:\"OpenAI API Key\",type:\"password\",value:apiKeys.openai,onChange:e=>setApiKeys(prev=>_objectSpread(_objectSpread({},prev),{},{openai:e.target.value}))}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,margin:\"normal\",label:\"Anthropic API Key\",type:\"password\",value:apiKeys.anthropic,onChange:e=>setApiKeys(prev=>_objectSpread(_objectSpread({},prev),{},{anthropic:e.target.value}))})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setSettingsOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{saveApiKeys(apiKeys);setSettingsOpen(false);},children:\"Save\"})]})]}),/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",sx:{mt:10,mb:8},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',height:'calc(100vh - 180px)'},children:[/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{flex:1,mb:2,p:2,overflow:'auto',display:'flex',flexDirection:'column'},children:[messages.map((message,index)=>/*#__PURE__*/_jsx(Box,{sx:{mb:2,alignSelf:message.role==='user'?'flex-end':'flex-start',maxWidth:'80%'},children:/*#__PURE__*/_jsx(Paper,{elevation:1,sx:{p:2,backgroundColor:message.role==='user'?'primary.light':'grey.100'},children:/*#__PURE__*/_jsx(ReactMarkdown,{children:message.content})})},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,maxRows:4,value:input,onChange:e=>setInput(e.target.value),onKeyPress:e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSend();}},disabled:isLoading}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleSend,disabled:isLoading,sx:{minWidth:100},children:/*#__PURE__*/_jsx(Send,{})})]})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Box","TextField","Button","Paper","Typography","AppBar","Toolbar","IconButton","Drawer","List","ListItem","ListItemText","Dialog","DialogTitle","DialogContent","DialogActions","Select","MenuItem","FormControl","InputLabel","Settings","Send","Menu","ReactMarkdown","OpenAI","Anthropic","openDB","jsx","_jsx","jsxs","_jsxs","DB_NAME","STORE_NAME","MODELS","backend","modelId","label","parameters","temperature","maxTokens","parameterMap","initDB","upgrade","db","createObjectStore","App","messages","setMessages","input","setInput","isLoading","setIsLoading","drawerOpen","setDrawerOpen","settingsOpen","setSettingsOpen","currentModel","setCurrentModel","apiKeys","setApiKeys","openai","anthropic","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadApiKeys","keys","get","saveApiKeys","newKeys","put","handleSend","trim","model","userMessage","role","content","prev","response","apiKey","apiParams","Object","entries","forEach","_ref","_model$parameterMap","key","value","mappedKey","completion","chat","completions","create","_objectSpread","choices","message","text","error","console","concat","sx","flexGrow","children","position","edge","color","onClick","variant","anchor","open","onClose","width","map","_ref2","button","selected","primary","fullWidth","margin","type","onChange","e","target","maxWidth","mt","mb","display","flexDirection","height","elevation","flex","p","overflow","index","alignSelf","backgroundColor","ref","gap","multiline","maxRows","onKeyPress","shiftKey","preventDefault","disabled","minWidth"],"sources":["/Users/victor/Documents/Sublime/claude_api_project/chat-pwa/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Container, \n  Box, \n  TextField, \n  Button, \n  Paper, \n  Typography,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel\n} from '@mui/material';\nimport { Settings, Send, Menu } from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport OpenAI from 'openai';\nimport Anthropic from '@anthropic-ai/sdk';\nimport { openDB } from 'idb';\n\nconst DB_NAME = 'chat-pwa-db';\nconst STORE_NAME = 'api-keys';\n\nconst MODELS = {\n  'claude-haiku': {\n    backend: 'anthropic',\n    modelId: 'claude-3-haiku-20240307',\n    label: 'Claude Haiku',\n    parameters: {\n      temperature: 0.7,\n      maxTokens: 4096,\n    }\n  },\n  'claude-sonnet': {\n    backend: 'anthropic',\n    modelId: 'claude-3-sonnet-20240307',\n    label: 'Claude Sonnet',\n    parameters: {\n      temperature: 0.7,\n      maxTokens: 4096,\n    }\n  },\n  'gpt-4': {\n    backend: 'openai',\n    modelId: 'gpt-4-turbo-preview',\n    label: 'GPT-4 Turbo',\n    parameters: {\n      temperature: 0.7,\n      maxTokens: 4096,\n    }\n  },\n  'gpt-3.5-turbo': {\n    backend: 'openai',\n    modelId: 'gpt-3.5-turbo',\n    label: 'GPT-3.5 Turbo',\n    parameters: {\n      temperature: 0.7,\n      maxTokens: 4096,\n    }\n  },\n  'o1-mini': {\n    backend: 'openai',\n    modelId: 'o1-mini',\n    label: 'ChatGPT o1 Mini',\n    parameters: {\n      temperature: 1,\n      maxTokens: 2048,\n    },\n    parameterMap: {\n      maxTokens: 'max_completion_tokens'\n    }\n  }\n};\n\nasync function initDB() {\n  return openDB(DB_NAME, 1, {\n    upgrade(db) {\n      db.createObjectStore(STORE_NAME);\n    },\n  });\n}\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [currentModel, setCurrentModel] = useState('gpt-3.5-turbo');\n  const [apiKeys, setApiKeys] = useState({\n    openai: '',\n    anthropic: ''\n  });\n  \n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  useEffect(() => {\n    // Load API keys from IndexedDB\n    const loadApiKeys = async () => {\n      const db = await initDB();\n      const keys = await db.get(STORE_NAME, 'api-keys');\n      if (keys) {\n        setApiKeys(keys);\n      }\n    };\n    loadApiKeys();\n  }, []);\n\n  const saveApiKeys = async (newKeys) => {\n    const db = await initDB();\n    await db.put(STORE_NAME, newKeys, 'api-keys');\n    setApiKeys(newKeys);\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    \n    const model = MODELS[currentModel];\n    const userMessage = { role: 'user', content: input };\n    \n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      let response;\n      \n      if (model.backend === 'openai') {\n        const openai = new OpenAI({ apiKey: apiKeys.openai });\n        const apiParams = {};\n        \n        // Map parameters according to model's requirements\n        Object.entries(model.parameters).forEach(([key, value]) => {\n          const mappedKey = model.parameterMap?.[key] || key;\n          apiParams[mappedKey] = value;\n        });\n\n        const completion = await openai.chat.completions.create({\n          model: model.modelId,\n          messages: [...messages, userMessage],\n          ...apiParams\n        });\n        response = completion.choices[0].message;\n      } else if (model.backend === 'anthropic') {\n        const anthropic = new Anthropic({ apiKey: apiKeys.anthropic });\n        const completion = await anthropic.messages.create({\n          model: model.modelId,\n          messages: [...messages, userMessage],\n          ...model.parameters\n        });\n        response = { role: 'assistant', content: completion.content[0].text };\n      }\n\n      setMessages(prev => [...prev, response]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: `Error: ${error.message}`\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setDrawerOpen(true)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            AI Chat\n          </Typography>\n          <IconButton color=\"inherit\" onClick={() => setSettingsOpen(true)}>\n            <Settings />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        anchor=\"left\"\n        open={drawerOpen}\n        onClose={() => setDrawerOpen(false)}\n      >\n        <List sx={{ width: 250 }}>\n          {Object.entries(MODELS).map(([key, model]) => (\n            <ListItem \n              button \n              key={key}\n              selected={currentModel === key}\n              onClick={() => {\n                setCurrentModel(key);\n                setDrawerOpen(false);\n              }}\n            >\n              <ListItemText primary={model.label} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      <Dialog open={settingsOpen} onClose={() => setSettingsOpen(false)}>\n        <DialogTitle>API Settings</DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"OpenAI API Key\"\n            type=\"password\"\n            value={apiKeys.openai}\n            onChange={(e) => setApiKeys(prev => ({ ...prev, openai: e.target.value }))}\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Anthropic API Key\"\n            type=\"password\"\n            value={apiKeys.anthropic}\n            onChange={(e) => setApiKeys(prev => ({ ...prev, anthropic: e.target.value }))}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setSettingsOpen(false)}>Cancel</Button>\n          <Button onClick={() => {\n            saveApiKeys(apiKeys);\n            setSettingsOpen(false);\n          }}>Save</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Container maxWidth=\"md\" sx={{ mt: 10, mb: 8 }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', height: 'calc(100vh - 180px)' }}>\n          <Paper \n            elevation={3} \n            sx={{ \n              flex: 1, \n              mb: 2, \n              p: 2, \n              overflow: 'auto',\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n          >\n            {messages.map((message, index) => (\n              <Box\n                key={index}\n                sx={{\n                  mb: 2,\n                  alignSelf: message.role === 'user' ? 'flex-end' : 'flex-start',\n                  maxWidth: '80%'\n                }}\n              >\n                <Paper\n                  elevation={1}\n                  sx={{\n                    p: 2,\n                    backgroundColor: message.role === 'user' ? 'primary.light' : 'grey.100'\n                  }}\n                >\n                  <ReactMarkdown>{message.content}</ReactMarkdown>\n                </Paper>\n              </Box>\n            ))}\n            <div ref={messagesEndRef} />\n          </Paper>\n          \n          <Box sx={{ display: 'flex', gap: 1 }}>\n            <TextField\n              fullWidth\n              multiline\n              maxRows={4}\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSend();\n                }\n              }}\n              disabled={isLoading}\n            />\n            <Button\n              variant=\"contained\"\n              onClick={handleSend}\n              disabled={isLoading}\n              sx={{ minWidth: 100 }}\n            >\n              <Send />\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}