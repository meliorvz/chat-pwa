{"ast":null,"code":"import _objectSpread from \"/Users/victor/Documents/Sublime/claude_api_project/chat-pwa/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { sleep } from \"../core.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport * as Core from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Files extends APIResource {\n  /**\n   * Upload a file that can be used across various endpoints. Individual files can be\n   * up to 512 MB, and the size of all files uploaded by one organization can be up\n   * to 100 GB.\n   *\n   * The Assistants API supports files up to 2 million tokens and of specific file\n   * types. See the\n   * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n   * details.\n   *\n   * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n   * required formats for fine-tuning\n   * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n   * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n   * models.\n   *\n   * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n   * has a specific required\n   * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n   *\n   * Please [contact us](https://help.openai.com/) if you need to increase these\n   * storage limits.\n   */\n  create(body, options) {\n    return this._client.post('/files', Core.multipartFormRequestOptions(_objectSpread({\n      body\n    }, options)));\n  }\n  /**\n   * Returns information about a specific file.\n   */\n  retrieve(fileId, options) {\n    return this._client.get(\"/files/\".concat(fileId), options);\n  }\n  list() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 ? arguments[1] : undefined;\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/files', FileObjectsPage, _objectSpread({\n      query\n    }, options));\n  }\n  /**\n   * Delete a file.\n   */\n  del(fileId, options) {\n    return this._client.delete(\"/files/\".concat(fileId), options);\n  }\n  /**\n   * Returns the contents of the specified file.\n   */\n  content(fileId, options) {\n    return this._client.get(\"/files/\".concat(fileId, \"/content\"), _objectSpread(_objectSpread({}, options), {}, {\n      __binaryResponse: true\n    }));\n  }\n  /**\n   * Returns the contents of the specified file.\n   *\n   * @deprecated The `.content()` method should be used instead\n   */\n  retrieveContent(fileId, options) {\n    return this._client.get(\"/files/\".concat(fileId, \"/content\"), _objectSpread(_objectSpread({}, options), {}, {\n      headers: _objectSpread({\n        Accept: 'application/json'\n      }, options === null || options === void 0 ? void 0 : options.headers)\n    }));\n  }\n  /**\n   * Waits for the given file to be processed, default timeout is 30 mins.\n   */\n  async waitForProcessing(id) {\n    let {\n      pollInterval = 5000,\n      maxWait = 30 * 60 * 1000\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n    const start = Date.now();\n    let file = await this.retrieve(id);\n    while (!file.status || !TERMINAL_STATES.has(file.status)) {\n      await sleep(pollInterval);\n      file = await this.retrieve(id);\n      if (Date.now() - start > maxWait) {\n        throw new APIConnectionTimeoutError({\n          message: \"Giving up on waiting for file \".concat(id, \" to finish processing after \").concat(maxWait, \" milliseconds.\")\n        });\n      }\n    }\n    return file;\n  }\n}\nexport class FileObjectsPage extends CursorPage {}\nFiles.FileObjectsPage = FileObjectsPage;","map":{"version":3,"names":["APIResource","isRequestOptions","sleep","APIConnectionTimeoutError","Core","CursorPage","Files","create","body","options","_client","post","multipartFormRequestOptions","_objectSpread","retrieve","fileId","get","concat","list","query","arguments","length","undefined","getAPIList","FileObjectsPage","del","delete","content","__binaryResponse","retrieveContent","headers","Accept","waitForProcessing","id","pollInterval","maxWait","TERMINAL_STATES","Set","start","Date","now","file","status","has","message"],"sources":["/Users/victor/Documents/Sublime/claude_api_project/chat-pwa/node_modules/openai/src/resources/files.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport { isRequestOptions } from '../core';\nimport { sleep } from '../core';\nimport { APIConnectionTimeoutError } from '../error';\nimport * as Core from '../core';\nimport { CursorPage, type CursorPageParams } from '../pagination';\nimport { type Response } from '../_shims/index';\n\nexport class Files extends APIResource {\n  /**\n   * Upload a file that can be used across various endpoints. Individual files can be\n   * up to 512 MB, and the size of all files uploaded by one organization can be up\n   * to 100 GB.\n   *\n   * The Assistants API supports files up to 2 million tokens and of specific file\n   * types. See the\n   * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n   * details.\n   *\n   * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n   * required formats for fine-tuning\n   * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n   * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n   * models.\n   *\n   * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n   * has a specific required\n   * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n   *\n   * Please [contact us](https://help.openai.com/) if you need to increase these\n   * storage limits.\n   */\n  create(body: FileCreateParams, options?: Core.RequestOptions): Core.APIPromise<FileObject> {\n    return this._client.post('/files', Core.multipartFormRequestOptions({ body, ...options }));\n  }\n\n  /**\n   * Returns information about a specific file.\n   */\n  retrieve(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileObject> {\n    return this._client.get(`/files/${fileId}`, options);\n  }\n\n  /**\n   * Returns a list of files.\n   */\n  list(query?: FileListParams, options?: Core.RequestOptions): Core.PagePromise<FileObjectsPage, FileObject>;\n  list(options?: Core.RequestOptions): Core.PagePromise<FileObjectsPage, FileObject>;\n  list(\n    query: FileListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FileObjectsPage, FileObject> {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n  }\n\n  /**\n   * Delete a file.\n   */\n  del(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileDeleted> {\n    return this._client.delete(`/files/${fileId}`, options);\n  }\n\n  /**\n   * Returns the contents of the specified file.\n   */\n  content(fileId: string, options?: Core.RequestOptions): Core.APIPromise<Response> {\n    return this._client.get(`/files/${fileId}/content`, { ...options, __binaryResponse: true });\n  }\n\n  /**\n   * Returns the contents of the specified file.\n   *\n   * @deprecated The `.content()` method should be used instead\n   */\n  retrieveContent(fileId: string, options?: Core.RequestOptions): Core.APIPromise<string> {\n    return this._client.get(`/files/${fileId}/content`, {\n      ...options,\n      headers: { Accept: 'application/json', ...options?.headers },\n    });\n  }\n\n  /**\n   * Waits for the given file to be processed, default timeout is 30 mins.\n   */\n  async waitForProcessing(\n    id: string,\n    { pollInterval = 5000, maxWait = 30 * 60 * 1000 }: { pollInterval?: number; maxWait?: number } = {},\n  ): Promise<FileObject> {\n    const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n\n    const start = Date.now();\n    let file = await this.retrieve(id);\n\n    while (!file.status || !TERMINAL_STATES.has(file.status)) {\n      await sleep(pollInterval);\n\n      file = await this.retrieve(id);\n      if (Date.now() - start > maxWait) {\n        throw new APIConnectionTimeoutError({\n          message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n        });\n      }\n    }\n\n    return file;\n  }\n}\n\nexport class FileObjectsPage extends CursorPage<FileObject> {}\n\nexport type FileContent = string;\n\nexport interface FileDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'file';\n}\n\n/**\n * The `File` object represents a document that has been uploaded to OpenAI.\n */\nexport interface FileObject {\n  /**\n   * The file identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The size of the file, in bytes.\n   */\n  bytes: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the file was created.\n   */\n  created_at: number;\n\n  /**\n   * The name of the file.\n   */\n  filename: string;\n\n  /**\n   * The object type, which is always `file`.\n   */\n  object: 'file';\n\n  /**\n   * The intended purpose of the file. Supported values are `assistants`,\n   * `assistants_output`, `batch`, `batch_output`, `fine-tune`, `fine-tune-results`\n   * and `vision`.\n   */\n  purpose:\n    | 'assistants'\n    | 'assistants_output'\n    | 'batch'\n    | 'batch_output'\n    | 'fine-tune'\n    | 'fine-tune-results'\n    | 'vision';\n\n  /**\n   * @deprecated: Deprecated. The current status of the file, which can be either\n   * `uploaded`, `processed`, or `error`.\n   */\n  status: 'uploaded' | 'processed' | 'error';\n\n  /**\n   * @deprecated: Deprecated. For details on why a fine-tuning training file failed\n   * validation, see the `error` field on `fine_tuning.job`.\n   */\n  status_details?: string;\n}\n\n/**\n * The intended purpose of the uploaded file.\n *\n * Use \"assistants\" for\n * [Assistants](https://platform.openai.com/docs/api-reference/assistants) and\n * [Message](https://platform.openai.com/docs/api-reference/messages) files,\n * \"vision\" for Assistants image file inputs, \"batch\" for\n * [Batch API](https://platform.openai.com/docs/guides/batch), and \"fine-tune\" for\n * [Fine-tuning](https://platform.openai.com/docs/api-reference/fine-tuning).\n */\nexport type FilePurpose = 'assistants' | 'batch' | 'fine-tune' | 'vision';\n\nexport interface FileCreateParams {\n  /**\n   * The File object (not file name) to be uploaded.\n   */\n  file: Core.Uploadable;\n\n  /**\n   * The intended purpose of the uploaded file.\n   *\n   * Use \"assistants\" for\n   * [Assistants](https://platform.openai.com/docs/api-reference/assistants) and\n   * [Message](https://platform.openai.com/docs/api-reference/messages) files,\n   * \"vision\" for Assistants image file inputs, \"batch\" for\n   * [Batch API](https://platform.openai.com/docs/guides/batch), and \"fine-tune\" for\n   * [Fine-tuning](https://platform.openai.com/docs/api-reference/fine-tuning).\n   */\n  purpose: FilePurpose;\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n\n  /**\n   * Only return files with the given purpose.\n   */\n  purpose?: string;\n}\n\nFiles.FileObjectsPage = FileObjectsPage;\n\nexport declare namespace Files {\n  export {\n    type FileContent as FileContent,\n    type FileDeleted as FileDeleted,\n    type FileObject as FileObject,\n    type FilePurpose as FilePurpose,\n    FileObjectsPage as FileObjectsPage,\n    type FileCreateParams as FileCreateParams,\n    type FileListParams as FileListParams,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}