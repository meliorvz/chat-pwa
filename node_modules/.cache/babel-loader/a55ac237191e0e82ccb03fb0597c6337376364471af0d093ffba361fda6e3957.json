{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless.\nimport { castToError } from \"./core.mjs\";\nexport class AnthropicError extends Error {}\nexport class APIError extends AnthropicError {\n  constructor(status, error, message, headers) {\n    super(\"\".concat(APIError.makeMessage(status, error, message)));\n    this.status = status;\n    this.headers = headers;\n    this.error = error;\n  }\n  static makeMessage(status, error, message) {\n    const msg = error !== null && error !== void 0 && error.message ? typeof error.message === 'string' ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n    if (status && msg) {\n      return \"\".concat(status, \" \").concat(msg);\n    }\n    if (status) {\n      return \"\".concat(status, \" status code (no body)\");\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n  static generate(status, errorResponse, message, headers) {\n    if (!status) {\n      return new APIConnectionError({\n        cause: castToError(errorResponse)\n      });\n    }\n    const error = errorResponse;\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n    return new APIError(status, error, message, headers);\n  }\n}\nexport class APIUserAbortError extends APIError {\n  constructor() {\n    let {\n      message\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n    this.status = undefined;\n  }\n}\nexport class APIConnectionError extends APIError {\n  constructor(_ref) {\n    let {\n      message,\n      cause\n    } = _ref;\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    this.status = undefined;\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor() {\n    let {\n      message\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({\n      message: message !== null && message !== void 0 ? message : 'Request timed out.'\n    });\n  }\n}\nexport class BadRequestError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 400;\n  }\n}\nexport class AuthenticationError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 401;\n  }\n}\nexport class PermissionDeniedError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 403;\n  }\n}\nexport class NotFoundError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 404;\n  }\n}\nexport class ConflictError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 409;\n  }\n}\nexport class UnprocessableEntityError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 422;\n  }\n}\nexport class RateLimitError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 429;\n  }\n}\nexport class InternalServerError extends APIError {}","map":{"version":3,"names":["castToError","AnthropicError","Error","APIError","constructor","status","error","message","headers","concat","makeMessage","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","arguments","length","undefined","_ref","APIConnectionTimeoutError"],"sources":["/Users/victor/Documents/Sublime/claude_api_project/chat-pwa/node_modules/@anthropic-ai/sdk/src/error.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport { castToError, Headers } from './core';\n\nexport class AnthropicError extends Error {}\n\nexport class APIError extends AnthropicError {\n  readonly status: number | undefined;\n  readonly headers: Headers | undefined;\n  readonly error: Object | undefined;\n\n  constructor(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.error = error;\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    if (!status) {\n      return new APIConnectionError({ cause: castToError(errorResponse) });\n    }\n\n    const error = errorResponse as Record<string, any>;\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError {\n  override readonly status: undefined = undefined;\n\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError {\n  override readonly status: undefined = undefined;\n\n  constructor({ message, cause }: { message?: string; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError {\n  override readonly status: 400 = 400;\n}\n\nexport class AuthenticationError extends APIError {\n  override readonly status: 401 = 401;\n}\n\nexport class PermissionDeniedError extends APIError {\n  override readonly status: 403 = 403;\n}\n\nexport class NotFoundError extends APIError {\n  override readonly status: 404 = 404;\n}\n\nexport class ConflictError extends APIError {\n  override readonly status: 409 = 409;\n}\n\nexport class UnprocessableEntityError extends APIError {\n  override readonly status: 422 = 422;\n}\n\nexport class RateLimitError extends APIError {\n  override readonly status: 429 = 429;\n}\n\nexport class InternalServerError extends APIError {}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}