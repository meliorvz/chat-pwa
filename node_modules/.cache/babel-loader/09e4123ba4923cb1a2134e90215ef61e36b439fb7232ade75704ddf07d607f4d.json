{"ast":null,"code":"import _objectSpread from \"/Users/victor/Documents/Sublime/claude_api_project/chat-pwa/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/victor/Documents/Sublime/claude_api_project/chat-pwa/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"baseURL\", \"apiKey\", \"authToken\"];\n// File generated from our OpenAPI spec by Stainless.\nvar _a;\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from '@anthropic-ai/sdk/resources/index';\n/** API Client for interfacing with the Anthropic API. */\nexport class Anthropic extends Core.APIClient {\n  /**\n   * API Client for interfacing with the Anthropic API.\n   *\n   * @param {string | null | undefined} [opts.apiKey=process.env['ANTHROPIC_API_KEY'] ?? null]\n   * @param {string | null | undefined} [opts.authToken=process.env['ANTHROPIC_AUTH_TOKEN'] ?? null]\n   * @param {string} [opts.baseURL=process.env['ANTHROPIC_BASE_URL'] ?? https://api.anthropic.com] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   */\n  constructor() {\n    var _Core$readEnv, _Core$readEnv2, _options$timeout;\n    let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      {\n        baseURL = Core.readEnv('ANTHROPIC_BASE_URL'),\n        apiKey = (_Core$readEnv = Core.readEnv('ANTHROPIC_API_KEY')) !== null && _Core$readEnv !== void 0 ? _Core$readEnv : null,\n        authToken = (_Core$readEnv2 = Core.readEnv('ANTHROPIC_AUTH_TOKEN')) !== null && _Core$readEnv2 !== void 0 ? _Core$readEnv2 : null\n      } = _ref,\n      opts = _objectWithoutProperties(_ref, _excluded);\n    const options = _objectSpread(_objectSpread({\n      apiKey,\n      authToken\n    }, opts), {}, {\n      baseURL: baseURL || \"https://api.anthropic.com\"\n    });\n    super({\n      baseURL: options.baseURL,\n      timeout: (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : 600000 /* 10 minutes */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch\n    });\n    this.completions = new API.Completions(this);\n    this.messages = new API.Messages(this);\n    this._options = options;\n    this.apiKey = apiKey;\n    this.authToken = authToken;\n  }\n  defaultQuery() {\n    return this._options.defaultQuery;\n  }\n  defaultHeaders(opts) {\n    return _objectSpread(_objectSpread({}, super.defaultHeaders(opts)), {}, {\n      'anthropic-version': '2023-06-01'\n    }, this._options.defaultHeaders);\n  }\n  validateHeaders(headers, customHeaders) {\n    if (this.apiKey && headers['x-api-key']) {\n      return;\n    }\n    if (customHeaders['x-api-key'] === null) {\n      return;\n    }\n    if (this.authToken && headers['authorization']) {\n      return;\n    }\n    if (customHeaders['authorization'] === null) {\n      return;\n    }\n    throw new Error('Could not resolve authentication method. Expected either apiKey or authToken to be set. Or for one of the \"X-Api-Key\" or \"Authorization\" headers to be explicitly omitted');\n  }\n  authHeaders(opts) {\n    const apiKeyAuth = this.apiKeyAuth(opts);\n    const bearerAuth = this.bearerAuth(opts);\n    if (apiKeyAuth != null && !Core.isEmptyObj(apiKeyAuth)) {\n      return apiKeyAuth;\n    }\n    if (bearerAuth != null && !Core.isEmptyObj(bearerAuth)) {\n      return bearerAuth;\n    }\n    return {};\n  }\n  apiKeyAuth(opts) {\n    if (this.apiKey == null) {\n      return {};\n    }\n    return {\n      'X-Api-Key': this.apiKey\n    };\n  }\n  bearerAuth(opts) {\n    if (this.authToken == null) {\n      return {};\n    }\n    return {\n      Authorization: \"Bearer \".concat(this.authToken)\n    };\n  }\n}\n_a = Anthropic;\nAnthropic.Anthropic = _a;\nAnthropic.HUMAN_PROMPT = '\\n\\nHuman:';\nAnthropic.AI_PROMPT = '\\n\\nAssistant:';\nAnthropic.AnthropicError = Errors.AnthropicError;\nAnthropic.APIError = Errors.APIError;\nAnthropic.APIConnectionError = Errors.APIConnectionError;\nAnthropic.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nAnthropic.APIUserAbortError = Errors.APIUserAbortError;\nAnthropic.NotFoundError = Errors.NotFoundError;\nAnthropic.ConflictError = Errors.ConflictError;\nAnthropic.RateLimitError = Errors.RateLimitError;\nAnthropic.BadRequestError = Errors.BadRequestError;\nAnthropic.AuthenticationError = Errors.AuthenticationError;\nAnthropic.InternalServerError = Errors.InternalServerError;\nAnthropic.PermissionDeniedError = Errors.PermissionDeniedError;\nAnthropic.UnprocessableEntityError = Errors.UnprocessableEntityError;\nexport const {\n  HUMAN_PROMPT,\n  AI_PROMPT\n} = Anthropic;\nexport const {\n  AnthropicError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError\n} = Errors;\nexport var toFile = Uploads.toFile;\nexport var fileFromPath = Uploads.fileFromPath;\n(function (Anthropic) {\n  // Helper functions\n  Anthropic.toFile = Uploads.toFile;\n  Anthropic.fileFromPath = Uploads.fileFromPath;\n  Anthropic.Completions = API.Completions;\n  Anthropic.Messages = API.Messages;\n})(Anthropic || (Anthropic = {}));\nexport default Anthropic;","map":{"version":3,"names":["Core","Errors","Uploads","API","Anthropic","APIClient","constructor","_Core$readEnv","_Core$readEnv2","_options$timeout","_ref","arguments","length","undefined","baseURL","readEnv","apiKey","authToken","opts","_objectWithoutProperties","_excluded","options","_objectSpread","timeout","httpAgent","maxRetries","fetch","completions","Completions","messages","Messages","_options","defaultQuery","defaultHeaders","validateHeaders","headers","customHeaders","Error","authHeaders","apiKeyAuth","bearerAuth","isEmptyObj","Authorization","concat","_a","HUMAN_PROMPT","AI_PROMPT","AnthropicError","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","NotFoundError","ConflictError","RateLimitError","BadRequestError","AuthenticationError","InternalServerError","PermissionDeniedError","UnprocessableEntityError","toFile","fileFromPath"],"sources":["/Users/victor/Documents/Sublime/claude_api_project/chat-pwa/node_modules/@anthropic-ai/sdk/src/index.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from './core';\nimport * as Errors from './error';\nimport { type Agent } from './_shims/index';\nimport * as Uploads from './uploads';\nimport * as API from \"./resources/index\";\n\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env['ANTHROPIC_API_KEY'].\n   */\n  apiKey?: string | null | undefined;\n\n  /**\n   * Defaults to process.env['ANTHROPIC_AUTH_TOKEN'].\n   */\n  authToken?: string | null | undefined;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   *\n   * Defaults to process.env['ANTHROPIC_BASE_URL'].\n   */\n  baseURL?: string | null | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   */\n  timeout?: number;\n\n  /**\n   * An HTTP agent used to manage HTTP(S) connections.\n   *\n   * If not provided, an agent will be constructed by default in the Node.js environment,\n   * otherwise no agent is used.\n   */\n  httpAgent?: Agent;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\n   * defined globally.\n   */\n  fetch?: Core.Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `undefined` or `null` in request options.\n   */\n  defaultHeaders?: Core.Headers;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Core.DefaultQuery;\n}\n\n/** API Client for interfacing with the Anthropic API. */\nexport class Anthropic extends Core.APIClient {\n  apiKey: string | null;\n  authToken: string | null;\n\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the Anthropic API.\n   *\n   * @param {string | null | undefined} [opts.apiKey=process.env['ANTHROPIC_API_KEY'] ?? null]\n   * @param {string | null | undefined} [opts.authToken=process.env['ANTHROPIC_AUTH_TOKEN'] ?? null]\n   * @param {string} [opts.baseURL=process.env['ANTHROPIC_BASE_URL'] ?? https://api.anthropic.com] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   */\n  constructor({\n    baseURL = Core.readEnv('ANTHROPIC_BASE_URL'),\n    apiKey = Core.readEnv('ANTHROPIC_API_KEY') ?? null,\n    authToken = Core.readEnv('ANTHROPIC_AUTH_TOKEN') ?? null,\n    ...opts\n  }: ClientOptions = {}) {\n    const options: ClientOptions = {\n      apiKey,\n      authToken,\n      ...opts,\n      baseURL: baseURL || `https://api.anthropic.com`,\n    };\n\n    super({\n      baseURL: options.baseURL!,\n      timeout: options.timeout ?? 600000 /* 10 minutes */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch,\n    });\n    this._options = options;\n\n    this.apiKey = apiKey;\n    this.authToken = authToken;\n  }\n\n  completions: API.Completions = new API.Completions(this);\n  messages: API.Messages = new API.Messages(this);\n\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return {\n      ...super.defaultHeaders(opts),\n      'anthropic-version': '2023-06-01',\n      ...this._options.defaultHeaders,\n    };\n  }\n\n  protected override validateHeaders(headers: Core.Headers, customHeaders: Core.Headers) {\n    if (this.apiKey && headers['x-api-key']) {\n      return;\n    }\n    if (customHeaders['x-api-key'] === null) {\n      return;\n    }\n\n    if (this.authToken && headers['authorization']) {\n      return;\n    }\n    if (customHeaders['authorization'] === null) {\n      return;\n    }\n\n    throw new Error(\n      'Could not resolve authentication method. Expected either apiKey or authToken to be set. Or for one of the \"X-Api-Key\" or \"Authorization\" headers to be explicitly omitted',\n    );\n  }\n\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    const apiKeyAuth = this.apiKeyAuth(opts);\n    const bearerAuth = this.bearerAuth(opts);\n\n    if (apiKeyAuth != null && !Core.isEmptyObj(apiKeyAuth)) {\n      return apiKeyAuth;\n    }\n\n    if (bearerAuth != null && !Core.isEmptyObj(bearerAuth)) {\n      return bearerAuth;\n    }\n    return {};\n  }\n\n  protected apiKeyAuth(opts: Core.FinalRequestOptions): Core.Headers {\n    if (this.apiKey == null) {\n      return {};\n    }\n    return { 'X-Api-Key': this.apiKey };\n  }\n\n  protected bearerAuth(opts: Core.FinalRequestOptions): Core.Headers {\n    if (this.authToken == null) {\n      return {};\n    }\n    return { Authorization: `Bearer ${this.authToken}` };\n  }\n\n  static Anthropic = this;\n  static HUMAN_PROMPT = '\\n\\nHuman:';\n  static AI_PROMPT = '\\n\\nAssistant:';\n\n  static AnthropicError = Errors.AnthropicError;\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n}\n\nexport const { HUMAN_PROMPT, AI_PROMPT } = Anthropic;\n\nexport const {\n  AnthropicError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} = Errors;\n\nexport import toFile = Uploads.toFile;\nexport import fileFromPath = Uploads.fileFromPath;\n\nexport namespace Anthropic {\n  // Helper functions\n  export import toFile = Uploads.toFile;\n  export import fileFromPath = Uploads.fileFromPath;\n\n  export import RequestOptions = Core.RequestOptions;\n\n  export import Completions = API.Completions;\n  export import Completion = API.Completion;\n  export import CompletionCreateParams = API.CompletionCreateParams;\n  export import CompletionCreateParamsNonStreaming = API.CompletionCreateParamsNonStreaming;\n  export import CompletionCreateParamsStreaming = API.CompletionCreateParamsStreaming;\n\n  export import Messages = API.Messages;\n  export import ContentBlock = API.ContentBlock;\n  export import ContentBlockDeltaEvent = API.ContentBlockDeltaEvent;\n  export import ContentBlockStartEvent = API.ContentBlockStartEvent;\n  export import ContentBlockStopEvent = API.ContentBlockStopEvent;\n  export import ImageBlockParam = API.ImageBlockParam;\n  export import Message = API.Message;\n  export import MessageDeltaEvent = API.MessageDeltaEvent;\n  export import MessageDeltaUsage = API.MessageDeltaUsage;\n  export import MessageParam = API.MessageParam;\n  export import MessageStartEvent = API.MessageStartEvent;\n  export import MessageStopEvent = API.MessageStopEvent;\n  export import MessageStreamEvent = API.MessageStreamEvent;\n  export import TextBlock = API.TextBlock;\n  export import TextDelta = API.TextDelta;\n  export import Usage = API.Usage;\n  export import MessageCreateParams = API.MessageCreateParams;\n  export import MessageCreateParamsNonStreaming = API.MessageCreateParamsNonStreaming;\n  export import MessageCreateParamsStreaming = API.MessageCreateParamsStreaming;\n  export import MessageStreamParams = API.MessageStreamParams;\n}\n\nexport default Anthropic;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}